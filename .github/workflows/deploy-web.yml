name: Deploy Web

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      ARN_OF_IAM_ROLE_TO_ASSUME:
        required: true
      PULUMI_CONFIG_PASSPHRASE:
        required: true

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.check_changes.outputs.changes_detected }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Check for relevant changes
        id: check_changes
        run: |
          changes=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changes detected:"
          echo "$changes"
          if echo "$changes" | grep -qE "^(apps/infra/|apps/web/|packages/)"
          then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi
  deployment:
    # TODO: uncomment
    # needs: check_changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        working-directory: apps/infra

      - name: Setup Pulumi
        uses: pulumi/setup-pulumi@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.ARN_OF_IAM_ROLE_TO_ASSUME }}
          role-session-name: WebDeployment
          aws-region: eu-central-1
          role-skip-session-tagging: true

      # TODO: uncomment
      # - name: Build & push docker images
      #   working-directory: apps/infra
      #   run: |
      #     echo "Deploying Pulumi stack: docker-production-web"
      #     pulumi up --stack docker-production-web --yes
      #   env:
      #     PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

      - name: Deploy with CodeDeploy
        working-directory: apps/web
        run: |
          echo "Deploying branch ${{ github.ref }} to production"
          commit_hash=`git rev-parse HEAD`
          aws deploy create-deployment \
            --application-name LatitudeLLMCodeDeployApp \
            --deployment-group-name LatitudeLLMDeploymentGroup \
            --codedeploy-appspec ./appspec.yml
